# use this for localhost testing only
# edit docker-compose.yaml to use dev tag and set env variable USE_LOCAL_CA=1
# see https://github.com/JonasAlfredsson/docker-nginx-certbot/blob/dev/docs/advanced_usage.md


server {
	listen [::]:443 ssl ipv6only=on default_server reuseport; # managed by Certbot
	listen 443 ssl default_server reuseport; # managed by Certbot
	server_name localhost;

	ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/localhost/chain.pem;
	ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	location / {
		proxy_pass http://flask:5000;
		proxy_buffering off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connect "upgrade";

		proxy_read_timeout 86400s;
		proxy_send_timeout 86400s;

		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}

	location /socket.io {
		proxy_pass http://flask:5000/socket.io;
		proxy_buffering off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connect "upgrade";

		proxy_read_timeout 86400s;
		proxy_send_timeout 86400s;

		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}

server {
	listen 80;
	listen [::]:80;
	server_name localhost;

	if ($host = localhost) {
		return 301 https://$host$request_uri;
		} # managed by Certbot

		return 404; # managed by Certbot
	}
