version: "3.8"
services:
  mongodb:
    container_name: mongo
    image: mongo
    restart: unless-stopped
    env_file:
      - mongo.env
    volumes:
      - mongo-data:/data/db/
      - mongo-logs:/var/log/mongodb/
    networks:
      - backend-network
    ports:
      - 27017:27017

  web:
    container_name: flask
    build: ./flask
    restart: always
    env_file:
      - mongo.env
      - flask.env
    volumes:
      - ./flask:/flask
    networks:
      - backend-network
      - frontend-network
    depends_on:
      - mongodb

  nginx:
    container_name: nginx
    image: jonasal/nginx-certbot
    restart: unless-stopped
    env_file:
      - nginx.env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend-network
    depends_on:
      - web

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - frontend-network
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    depends_on:
      - cadvisor
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana_storage:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  nginx-secrets:
  mongo-data:
  mongo-logs:
  grafana_storage:

networks:
  backend-network:
  frontend-network:
